server:
  port: 8080

spring:
  application:
    name: projfinal-meow

  profiles:
    active: "@xxxx@"

    web:
    resources:
      static-locations: classpath:/static/
  #資料庫連線設定
  datasource:
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    url: jdbc:sqlserver://localhost:1433;database=meowdb;trustServerCertificate=true
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD:a123}

  #Hibernate/JPA的相關設定
  jpa:
    properties:
      hibernate:
        format_sql: true
    show-sql: true
    properties:
      hibernate.format_sql: true
    database-platform: org.hibernate.dialect.SQLServerDialect
    hibernate:
      ddl-auto: create
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

  #Redis資料庫連接資訊(冠)
  data:
    redis:
      host: 127.0.0.1 # Redis 伺服器地址
      port: 6379
      password: a123 # 如果沒有設密碼可以留空
      timeout: 3000 # 請求超時時間，毫秒
      repositories:
        enabled: false #禁止Redis 的自動儲存庫掃描，改手動啟用所需的 Redis 儲存庫


  #靜態資源目錄添加到外部目錄，讓前端能夠直接存取商城上傳的圖片；
  web:
    resources:
      static-locations: file:C:/meowWebsite/images/

  #圖片大小限制
  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB
      max-request-size: 20MB
#商城圖片下載路徑 (動態路徑)
file:
  storage:
    uploadDir: C:/meowWebsite/images #指向實際的存儲目錄
    baseUrl: ${BASE_URL:http://localhost:8080/images} #對應圖片的訪問 URL
      enabled: true

  #spring手動設定 HTTP 請求和回應的字符編碼(冠)
  encoding:
    charset: UTF-8
    enabled: true
    force: true

  #寵物圖片暫存路徑(冠)
file:
  tmp-upload-dir: C:/upload/tmp/pet/images/

  #寵物圖片上傳路徑(冠)
  final-upload-dir: C:/upload/final/pet/images/

  #conosle顏色
  output:
    ansi:
      enabled: always

  jackson:
    date-format: "yyyy-MM-dd"
    time-zone: Asia/Taipei

jwt:
  token:
    expire: 60

#google座標api(冠)
google:
  api:
    key: AIzaSyATLMpyW2m1qnNAAQf0rZSpcl6TadBobBg

#message API(冠)
Channel:
  Access:
    Token: "bHAiA50c1WQlH3fIjjz8PynVtkZf50BGYZT4jm/nCKCCnuzlyQloKiyZehAhCy4i/Ul42mUG7BUUNMwVxGQq2BFESxObRGLVKNH10flSwU4fjmbJf/12sr+3CQ866g1QZmMtX4Xsv8hGG9ZryLBtGgdB04t89/1O/w1cDnyilFU="
  Secrete: ad5f41710e2d45702d5065650ce7d03f

#執行 RestTemplate請求時日誌會打印 HTTP 請求與回應的詳細資訊(用於檢查請求地址正確性)(冠)
logging:
  level:
    org:
      springframework:
        web:
          client:
            RestTemplate: DEBUG
      apache:
        http: DEBUG
#Domain Name(冠)
front:
  domainName:
    url: http://localhost:5173

back:
  domainName:
    url: http://localhost:8080

#前端讀取後端圖片的路徑，用在init的案件資料controller中
image:
  base:
    url: http://localhost:8080/upload/final/pet/images/

#用在後端圖片路徑轉前端路徑的rescueService檔案中
serverAddress-serverPort: localhost:8080

#開發用公開網域url(冠)   //記得到時候也要去改LINE平台上webhook的url
ngrok:
  url: https://f632-36-225-194-22.ngrok-free.app

#linebot跳轉(冠)
lineBot: https://line.me/R/ti/p/@310pndih

#line login相關設定(冠)
line:
  login:
    redirect-uri: ${back.domainName.url}/line/callback
    channel-id: 2006807062
    channel-secret: 1f781b9cf730b0c4decdeba7eead6778


jackson:
  serialization:
    fail-on-empty-beans: false

mail:
  host: smtp.gmail.com
  port: 587
  username: a0912829673+test@gmail.com
  password: frww ocfi lxda dscs


  